// Code generated by go-bindata.
// sources:
// test-certs/agent.crt
// test-certs/agent.csr
// test-certs/agent.key
// test-certs/loggregator-ca.crl
// test-certs/loggregator-ca.crt
// test-certs/loggregator-ca.key
// test-certs/router.crt
// test-certs/router.csr
// test-certs/router.key
// DO NOT EDIT!

package testhelper

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _agentCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEJDCCAgygAwIBAgIRAOQ70HcYGOfL8r8gmmYOSXcwDQYJKoZIhvcNAQELBQAw
GDEWMBQGA1UEAxMNbG9nZ3JlZ2F0b3JDQTAeFw0xODAyMTUyMDM1NDNaFw0xOTA4
MTUyMDM1MzlaMBAxDjAMBgNVBAMTBWFnZW50MIIBIjANBgkqhkiG9w0BAQEFAAOC
AQ8AMIIBCgKCAQEAxGEQ7+9NjLg6V9JBS0IoLQ9pC8CkUcmwmrI4U1NpuWzbzIIF
DhZj4wZGBIIVeU9xNj2vHG1ykLSIreaYfmMgli2FWQ0YiSwpFGEwvwQ87MaoA5fN
lVaUsg9v7rI7azMiH4WeJest2IyxBVo0rU38VrOt+/ig63ENrf+A91x3gnQ/8DpD
LmFhs/EvVc9bcq9BGu7+n256SnNL3v7diu1J7mrvpM3pzKeMYCp9USIR10PqPJHA
N3oqIch8a1fReW0Z/+hXsGTGJJNtEfk30TOwPUMQE/b506EVxFw8Va7o6fFYp+Bn
PsmqyrcLooqzIln2qg/eLEA/MNxBWsgGbuLiBwIDAQABo3EwbzAOBgNVHQ8BAf8E
BAMCA7gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMB0GA1UdDgQWBBRT
EUqS6RFB9gzWJUImAZ2t+wmRMTAfBgNVHSMEGDAWgBTTpFRjL/GrTLZ98Ao0YSoi
weK2vjANBgkqhkiG9w0BAQsFAAOCAgEAT0Ga3iUMm2IfrjJKDS2jVAZntv43EmoH
EaSG/wYpdIt7HnyNa/aYlnl7a2ASfxExCF6mr4zLy5PjxIVz4mObZ5lqI8OInAee
2LKd1EBQ/WYlWRyXMxTap5lV0XgFNlmVDMyR97irRB1dSoaWXhdZSvcdbOvXHfHm
BlyRV2WDxBRtqOhFD5FEZyThjV+q216QXIrcCpBXsiYkXMQMyNvD2/x9Vv9Gg6VE
09k84VlPJqOqlaPdZDL5XhSfZ8fxMbviH91990QWyfUk4JyLxlFZIqDglDph+guw
Tlzi0TjiZLfSJB1ghqjOCscEwCRYyPB1skQbaREzF3Z98RyNK3Wi8s9Ng61wLP08
yiiNdRnyqicRQQGeBb3m709h1jAVacJUVyIEy9eF52ygPg/2MbiOClbSCCr0Wnxe
/r9R6k7hTV/YOBb0TegoapQ62CSsEZRqipkXzcPYczjZoCbn4C4p7NGhufmWLyYz
wLroa9InLsRmDlRiC8LHoJN/IPdbnejyUpwiEo9D5eTOJ2CPsICTwsoqZu0JUOaU
xQxxQZmxf7LM207IAhGqD/105h4tMCs1xB7Jdf5kB5Zr+D0mykzVOsPcuKNH4BR3
IaJcgYF80kjbneRojyMttPwcXg7Pau2lXKlvK4dm4DOFjkkp0KrP0wzN13yFJHKG
0zVsFer+oPk=
-----END CERTIFICATE-----
`)

func agentCrtBytes() ([]byte, error) {
	return _agentCrt, nil
}

func agentCrt() (*asset, error) {
	bytes, err := agentCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "agent.crt", size: 1497, mode: os.FileMode(292), modTime: time.Unix(1518726943, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _agentCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICVTCCAT0CAQAwEDEOMAwGA1UEAxMFYWdlbnQwggEiMA0GCSqGSIb3DQEBAQUA
A4IBDwAwggEKAoIBAQDEYRDv702MuDpX0kFLQigtD2kLwKRRybCasjhTU2m5bNvM
ggUOFmPjBkYEghV5T3E2Pa8cbXKQtIit5ph+YyCWLYVZDRiJLCkUYTC/BDzsxqgD
l82VVpSyD2/usjtrMyIfhZ4l6y3YjLEFWjStTfxWs637+KDrcQ2t/4D3XHeCdD/w
OkMuYWGz8S9Vz1tyr0Ea7v6fbnpKc0ve/t2K7Unuau+kzenMp4xgKn1RIhHXQ+o8
kcA3eiohyHxrV9F5bRn/6FewZMYkk20R+TfRM7A9QxAT9vnToRXEXDxVrujp8Vin
4Gc+yarKtwuiirMiWfaqD94sQD8w3EFayAZu4uIHAgMBAAGgADANBgkqhkiG9w0B
AQsFAAOCAQEAVqr5ffJGR/yixmJY3glp/uw5Jkq8oJlcwOPNESV5Yog9fS/fCBkY
xqHfugmmcmoOhKvyu6ou/8QOS/6Wv5QLITu47lhjZ6HSQr1Fsg/iWFMJh0mKP2dX
HCr7/1MhiG/xcSlx9M/lNCu6PRSGFLuM3MuLhfP0ZwtZQC11TUleewi+d2fJ5DzZ
+C2ipyyVjVXaiCodvnF9BZ34M6YqdOrt3/WuKTVG0dlFs5bMUiwU6weO9AaSfx4v
wr2KdiqvojUctKo0/88Bm+14Y5nwtPVXA+olku9CvWDUP/XHkGkwdyU8GOp5eMFV
xnjDzBwudbSN+NpdS35uZGybzkLvjKPPGA==
-----END CERTIFICATE REQUEST-----
`)

func agentCsrBytes() ([]byte, error) {
	return _agentCsr, nil
}

func agentCsr() (*asset, error) {
	bytes, err := agentCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "agent.csr", size: 887, mode: os.FileMode(292), modTime: time.Unix(1518726943, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _agentKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAxGEQ7+9NjLg6V9JBS0IoLQ9pC8CkUcmwmrI4U1NpuWzbzIIF
DhZj4wZGBIIVeU9xNj2vHG1ykLSIreaYfmMgli2FWQ0YiSwpFGEwvwQ87MaoA5fN
lVaUsg9v7rI7azMiH4WeJest2IyxBVo0rU38VrOt+/ig63ENrf+A91x3gnQ/8DpD
LmFhs/EvVc9bcq9BGu7+n256SnNL3v7diu1J7mrvpM3pzKeMYCp9USIR10PqPJHA
N3oqIch8a1fReW0Z/+hXsGTGJJNtEfk30TOwPUMQE/b506EVxFw8Va7o6fFYp+Bn
PsmqyrcLooqzIln2qg/eLEA/MNxBWsgGbuLiBwIDAQABAoIBABPXsvxrc6yKWOrS
xeIy1xhmfDjByFizRnL7GxHgVch0pWjuolAgFwuzcJO4CS9uxYOzi+QVcwQIGd9o
c3Qh1AMYqmarGhWSLrxubZx/cyCBmixyxEUYsIGlaav2umZEjmgc+jPepY1B+gkO
alAwlxSzpxrUrn3buIQiUwergi/eHaq6D8MriPU4lrYLpIFdH7AcypvLTkrQPILK
xdArn8zuIfBabKFVnGcD9XN6Bz11RvGLyUFu5vgVx7y0RCc7tN/QYaPlJIRFNkAj
4f11HAIoly3Xx5CJhF/G4OfIGFrd/Qo1hKho5oghPIcVUPkSiG5pSnnr94rvxZCM
2C1WiaECgYEA9sdw6TC0rLmjp6ye7QQ+TdiTaBdlySWiipenabM5RI6oyX28df1u
K+bEyYrcOee6HSC0op2r5oZzzySBMLjJI14gPnRfX3craU7+YH87kEqj4X1q6j34
CJR+eSDVQgzFfsqWUBrOO9s1jhnFd0ekKjsi1zBhnvA95fBd4vxQXi8CgYEAy7eG
rzmfjtSqn5rfJhmjPl1SvvIx5i3rJYU5RmuiZMNYuyAsPmRcfUokWbiHxKBEbnCT
elXWSiQABT7zqpdbqrlkdOxGpD7GUpLiBFhETb+RmYCNPlmK3Lxhy5vMlGzQno3I
7453VnaW4c2qtigMGswa17IXUiBTfm2laczGW6kCgYEAiMgQ0F+btSUMDbMDP7Ib
aoCBa6+UTkJa7mCSfWbGdjZwXYYgwHFg8FpvdppN6JaFNQHcvUmRbyvU4tqD9OJn
MgBI9PUBq+Ncn3kWS5waAqcsYJ5odT81zGOqGi9VpM95ZAab+/hvmQOukn28UpnV
50Zx0D5TzYmxdVKeZ2KclScCgYBc/RIKi/gMP4D+x7fScWN1hS3PIUirtAwhHVXO
kjUXX5/yErZ/aFpbimtbVQMMOsfhzZtT/TiKsTIdMuYQ2XQrUuLLCEsaj9kBOjDX
IN9UyfwRIH/YlRDwv0C4qw5QNfdoWHn+9337xrgKrFGfQlp8JOyfxpgkkcLq8+vM
hn+IuQKBgQC5jLXVG1yRDnbF285PWMVSyQILdXsz9tsTVhv5OApXmKBB9VdWePrY
buEp+6BjkyXFl0Si+SOAPyprAzZLutKn/xD1APjDEPchGVQSDPLkRRUQtSV2u/af
s2QYdhCIBgPD13hS5bGphrhXQm+MDp73Y3HwdlaZoCrCzgEE30dz4w==
-----END RSA PRIVATE KEY-----
`)

func agentKeyBytes() ([]byte, error) {
	return _agentKey, nil
}

func agentKey() (*asset, error) {
	bytes, err := agentKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "agent.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1518726943, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaCrl = []byte(`-----BEGIN X509 CRL-----
MIIChzBxAgEBMA0GCSqGSIb3DQEBCwUAMBgxFjAUBgNVBAMTDWxvZ2dyZWdhdG9y
Q0EXDTE4MDIxNTIwMzU0MloXDTE5MDgxNTIwMzU0MFowAKAjMCEwHwYDVR0jBBgw
FoAU06RUYy/xq0y2ffAKNGEqIsHitr4wDQYJKoZIhvcNAQELBQADggIBAFL6waDI
KHSEqfDx6gjvMLTbHonqq8TyNl69k/9jU1v8zMB1kdDNEmveeoxDvjvrSGBHabTQ
dYsM0Fw8By5r/60KkcIEkwaTX9xV+xNR82J+gRPRx6r3wRxCIAgzXdBaygGfzRsa
mf0K6le2d9sgZIjjT4Mm7sZgoyCH6+yu+j7QNgSJM7s1hSW+5pDFCBQu4ODbC1oT
DSgpK4zITfcEpod6KgaflMG4kL39m5hO6o1n2h+ZmG/pQ8r3IhX1R3gCiSjLOrHO
r1A1v32UOP/XiLuMS1jVRPLY69r7G1cG9VJCREHOme2PhynwCiL6pkaFq43ZFTrG
rzZuryAGXsa0o3lMZqRqJiOhRgrxvkMt9hLJxTd8qgRckyQyHixMaFgj1zMe/Dyw
gNcNs4I1jWXAk3sfBB7pZjA8nfUTCjE1UIoiF07SUG36kz7RHFUHdeHCMMYnBW/o
mAod1xbizIO29hE4C2HeP13uqzm2l7+7ClsBGTu7YYubMCYMCqTpXYfPBI71rl3V
hB4vWaWF1ajREGMvJu3cecbyAfHzOYT8f4b1OQCZbr8NnKSD3HcEj1oyMicE/RRx
xWg+d4J8KsnbKAEli73lwyEOgxipCzYFY1icMIAvTI1XH/xvUW/TstqFuAh6KEnp
K2UVbk4EBOquKey7tTOtLeSNolUX72bbDD39
-----END X509 CRL-----
`)

func loggregatorCaCrlBytes() ([]byte, error) {
	return _loggregatorCaCrl, nil
}

func loggregatorCaCrl() (*asset, error) {
	bytes, err := loggregatorCaCrlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.crl", size: 930, mode: os.FileMode(292), modTime: time.Unix(1518726942, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIE8DCCAtigAwIBAgIBATANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDEw1sb2dn
cmVnYXRvckNBMB4XDTE4MDIxNTIwMzU0MFoXDTE5MDgxNTIwMzU0MFowGDEWMBQG
A1UEAxMNbG9nZ3JlZ2F0b3JDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC
ggIBAOTBLHvKG2JxZw3Axe7UnXUpvtSmLMfi+Pj5bvWkI9ZOR/G9I0FEULk5N6WR
1Z90e+ErKxSWBa9O2XTrC/5QmFu2xlZZU+j7Mz7t+bmjgkTYkBtOZCXWYssoHWa7
Qb/fEgS0jUhiH5ihTtyIOnjjxOZHyvgeStieu84BCpia/X0j8soenHzSxreTTWzB
Z/2dUO5jnOFkzKzqHYGSup30akemWd2STVB6HIwBVj7BUz/VwH7pUNEvgTDXasM9
VWV6NyZrDuf4RvKFyAuAu3jxFGMTRRfW6s6pDCfJtZP1aF4TcgufmatEps554QS/
UfWUYO4czBEITqVNQlKBm7EM9HvEX3UbcHuXJ1JrfKkmaNf7/zrdmUaJP2fhtO5i
bG2w+VSd1Sm3DRPDRPYlYaLNg6KzXq8mVlBzlA2d39yN3KBZmf2FS31PjsRJc8IX
Sc6sq/XkST0t7NG6aO8AKxRh98ptcR815D1QqmRbqr2bthh+ufk7r0xjbKz5NmEQ
iYxzrPldv17rlVrNQEbsGAnXpoKHCRuQ6+ZibH/QRebLDzv/2a0rApTDzfP9TLzF
wzP07ZnmyPb6winZgmDQ/F2urPW7L1/Q9lrBLbdCdpVDEK6hTFZmlKNDwLqWcLIJ
P5q19/M4km5GXoFwotELM//1Lx0DN20A/XgQBklzGUB/ziUfAgMBAAGjRTBDMA4G
A1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBTTpFRj
L/GrTLZ98Ao0YSoiweK2vjANBgkqhkiG9w0BAQsFAAOCAgEAdDWX4SARIPytiU52
GlgTXMDV5BjL695fd5CozouNQGICrEP3CxFK6HI50iFdq1S0ADN6apnvx4kC0Nzo
dd3sRi16Hr+jWnv/kloUb4mAkfILpj9My033dI3kKcyEEcPz1wHmNh2Gfro8l9ek
6QYU/EPn3wqXrV9Zx+YpghZJXksFyHNMizKJorsH+0A0kJoVlxH/3Bc8AHm4A73D
XN9GwVsxQNWSoOjSDAsj4SNm1X6iJHeJd73SfLPhKEk/nl0YXo9qdpL8Obfgopvy
h3wMYY5vftJWP50HLdCEWOwlObNUTWPxgVikVibP5Ml+1klZU196vVS9g9aop/Lv
+Fto12MovsGySrqHuduvl0II7u3IY34h+37N6AFg2amXKaGRRayF2BG4rYPEFGZJ
sjAIOUF49mcacynBA37aQJ+iONc79k4srrn6ahDfPgBiD4eGmhvBFTP5MUZU1xJz
ZYHrLwFOT4AFmqlHiV8XTapeE6IIY79YQotDsDapJMb0ypwnfyXWcPj9I9cA6gde
C4yajjjtphC1prRQ3yPO+x/759+Z/zgOAg400bDSnmNKT1E1VYgKqeSeH2qF88vZ
rLH0iiEnJAk4o9ocVHzqjhoRDZ2qd1qXs0KE2H+xlOM5x5w+tyvAAHMI6lK5hxFa
Q4XuHleXei416rNZBJjrrEEv+a4=
-----END CERTIFICATE-----
`)

func loggregatorCaCrtBytes() ([]byte, error) {
	return _loggregatorCaCrt, nil
}

func loggregatorCaCrt() (*asset, error) {
	bytes, err := loggregatorCaCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.crt", size: 1773, mode: os.FileMode(292), modTime: time.Unix(1518726942, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----
`)

func loggregatorCaKeyBytes() ([]byte, error) {
	return _loggregatorCaKey, nil
}

func loggregatorCaKey() (*asset, error) {
	bytes, err := loggregatorCaKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.key", size: 3243, mode: os.FileMode(288), modTime: time.Unix(1518726942, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _routerCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEJTCCAg2gAwIBAgIRAPKnBpw8aYmfOARN1OgwGoswDQYJKoZIhvcNAQELBQAw
GDEWMBQGA1UEAxMNbG9nZ3JlZ2F0b3JDQTAeFw0xODAyMTUyMDM1NDNaFw0xOTA4
MTUyMDM1MzlaMBExDzANBgNVBAMTBnJvdXRlcjCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBALOixHf21u7ZrmadrVSkeyDh46xC2LmxdIirodfOOfmCJt8V
HLik9Jy71TLer7p2BobQciF+LhqkshTn5aez91ku5NU6yXLsba6WsPrl9eXD9K9i
n5gc8qSwq5o9NPpKYgKGPKNHeRbqaDKfVLgEaRAZ/3Tlujb1Tl+jdV7/p681Pvgn
+PMnndY62TvgVGUFwh3Shv6gNXvROc9T9yNfgO8UsJpGtfO5z9nM0OngRafDRHnv
8IDT+3aju3zEfmUUSvueEQf9p5pWOdZLaIOIfdnxfjjvXeS4fA9arAfvGnaQ3sPO
qTK0IHDFqG9T6YfteTnhlBjuCCQdQPVclq/LeiMCAwEAAaNxMG8wDgYDVR0PAQH/
BAQDAgO4MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNVHQ4EFgQU
0HngHzTCsU0AF75RI5lumsnt5vQwHwYDVR0jBBgwFoAU06RUYy/xq0y2ffAKNGEq
IsHitr4wDQYJKoZIhvcNAQELBQADggIBAC6nILbVB+uxY3HXsCZbsIhuY4onziuk
rtF/maXUbO2xgMce5L7Qnbw9T8aGJUZLXncV6RydzR4whkAEmfMmEt8iQuwz/J9k
xaHjzXyZoR3WJarQfgl+vQcznRUs6i2gw8A+j6+dxlZr8fr5P5THK5zayUUHC5Fi
feOjF/CbHHeCDn649VCagta4RaIDUhGFeovV9/R7qqY1hRdvQZ9A5FIPWOCdPzgZ
/b5LvXv7NC+wkZhWoBHroBX/JcgJ59mYdPNhn+Ff4tKZKSFUdPKJK8RhlMdxMnbQ
t6tL6CYXueXNVk5rQCRttHrD0D61FWyvoVB6J7Z6V1jIZBuva3ljFNo7zbyS4gjr
4aPJzxQhueY4rDtrYUcaOgFI8aFbBVckVrpneFPiHUzCAqBLyM5iiMnmuhGC6OdI
eiiD3m5bcJpHbTviEcQFpDVVH+YQDSs2AnZ7MdcciH/P+pVr15fBDGc3osTO9HMF
2An6tKcrs3miCAXgCGxlfJUOcGrNF03vWI0l1F64QkKsOjuqq7BtTo6YNQDwXPny
p2LXTGR1XfCLatPDyXjDac+5OypE59dwC9lQUKcRWpHYXnVwWaQVVNW+d5zwO+/O
H6toCWjcu43hByTjfXecJOD3XYKzDFY3pcGESrFU3CHJD8rS8/wIPeT1ckMjkhyU
ozUHWaW0EJ3N
-----END CERTIFICATE-----
`)

func routerCrtBytes() ([]byte, error) {
	return _routerCrt, nil
}

func routerCrt() (*asset, error) {
	bytes, err := routerCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "router.crt", size: 1497, mode: os.FileMode(292), modTime: time.Unix(1518726943, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _routerCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICVjCCAT4CAQAwETEPMA0GA1UEAxMGcm91dGVyMIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEAs6LEd/bW7tmuZp2tVKR7IOHjrELYubF0iKuh1845+YIm
3xUcuKT0nLvVMt6vunYGhtByIX4uGqSyFOflp7P3WS7k1TrJcuxtrpaw+uX15cP0
r2KfmBzypLCrmj00+kpiAoY8o0d5FupoMp9UuARpEBn/dOW6NvVOX6N1Xv+nrzU+
+Cf48yed1jrZO+BUZQXCHdKG/qA1e9E5z1P3I1+A7xSwmka187nP2czQ6eBFp8NE
ee/wgNP7dqO7fMR+ZRRK+54RB/2nmlY51ktog4h92fF+OO9d5Lh8D1qsB+8adpDe
w86pMrQgcMWob1Pph+15OeGUGO4IJB1A9VyWr8t6IwIDAQABoAAwDQYJKoZIhvcN
AQELBQADggEBADnJ5R1zWnrTaFP45hC9UbhS2z+W3N9U/dRQ4EEWIXV1p1Q4+rRj
nKMT8E80uWReS06HIvde1lbvWRScgo2nhE2BhyMgAT4xTDfX6fFTjOtyRHaHfLhi
vyhp03ZB193i1JKV2mMyg4igfViI8FejqOvAiel65ZFYd9CDo9lNBfUO912JZtH+
ODj1RxCnhn12HmLjN/awbRF9hkWsb7rO2HlLIpThFasthrBzhkbF5tLl3/rd4qXo
o1TX2XOhpZBUo7BxgPvMDBLVMYVAit1nZn49YCWt9k1EZBZOzfxEWtLExgKDM176
+IKHXsSKMEdaU1NxrtWTUX1kWcMkyGC8e4A=
-----END CERTIFICATE REQUEST-----
`)

func routerCsrBytes() ([]byte, error) {
	return _routerCsr, nil
}

func routerCsr() (*asset, error) {
	bytes, err := routerCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "router.csr", size: 887, mode: os.FileMode(292), modTime: time.Unix(1518726943, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _routerKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAs6LEd/bW7tmuZp2tVKR7IOHjrELYubF0iKuh1845+YIm3xUc
uKT0nLvVMt6vunYGhtByIX4uGqSyFOflp7P3WS7k1TrJcuxtrpaw+uX15cP0r2Kf
mBzypLCrmj00+kpiAoY8o0d5FupoMp9UuARpEBn/dOW6NvVOX6N1Xv+nrzU++Cf4
8yed1jrZO+BUZQXCHdKG/qA1e9E5z1P3I1+A7xSwmka187nP2czQ6eBFp8NEee/w
gNP7dqO7fMR+ZRRK+54RB/2nmlY51ktog4h92fF+OO9d5Lh8D1qsB+8adpDew86p
MrQgcMWob1Pph+15OeGUGO4IJB1A9VyWr8t6IwIDAQABAoIBAQCoFopY5rS/0xkK
FEj4huBgKH7t1a8OMyqkKFXMpcBB5LOS0yKI9HGfp3Mbopw0kfQRekMRbAygCbRJ
M6UFg7TT0rl1fQi7bNhFIeSBIWUylmYDJvnHUG8MA/TO4q8L9UY4rntXHa4E71qI
4+ZWOmpFEs6jB8NzYZ7whvdw6TBzFIIKPUnt/eErX6JN19oMGNPksPMLFWOFv/Ow
1AkT3ajOE1JSfsU0xO2YLbob9dqEmFWu3ZYOXwE7xolI7bNaDzMuMRWRsoHZ9apV
sTc01jbh+Hb5ufJB2vAUE2z7lmBzmcZL3FXt8/LTp88Xlr/PPrJK4ou+qoYBJhZF
O448/kIBAoGBAMxpTnkuFNeOgs9QzgAbWaXMgUZ3zBP8Qgv/vhor0tojg7L/EvRF
hrR88GVpzqDRi0m6TyYkkZNX/rEyOu91CNQYYLuM/pqBLwncQELvovNOuGvs/MlM
ASykKKwCprkhBeUSbI79yr1A+hjCxDpiPOw+MXY4IFRazIeeRIXgSQ3jAoGBAOD4
wJn0oW5CPRD1bqMnT+c6TcNj6TFulFUqTs3sHc5e+jzZ91O5i6XE+iIWhRFyxN6M
c4BJkdd35cIKUgCWKhm0t6HpxZPvKL02daCePlwsFFCWpsVOVlo6ASdIPsMLMXcS
o6KjWH503VVVRanhBCbzWiBx0V+DEM5EETAvJ5bBAoGAIAHlTchPbylbhkbq2s1t
ji6ll3kutXpshSB4jfSKwamJ979FIoa4fw6JPfgBaOEm5FaOCjTzrpS6xthMri4v
QbbHftanD15nFS4tyc1oQJz098FWG9cQ4AKcc8K+hIKNP79QzFslIdlI0BO/Uj0L
uRpL+Gz1cv/8wsefhy8FgW0CgYAjGYxrOMiq/Dis2a4OVIbZ67XQQ1lRtg/8jaJH
7Ivl89mU/ujgrjVEgswH332ZcE+Y7U7j+BaCCJnXQWbz4nnlEtYHtAJ4hzrS8pk9
mxLdrJ7qx+ZzKDq+zwf5CgOIyMlJ66WOLXAUIsWZl7lLvOi57wPjxf5FqZxIokQQ
QXsqwQKBgA18+XZR5QleJNajOE1enhma+BOLHV8MOLwNm2EmD7ZHMHcLZAph+JfE
TXTFzx6yuDpGUhfVgrs/leExxZxyAuVB2UO4CqPgYYujOIzGF0x7TXj5+Eh3SD5R
wBhBQp58GLs2ZQhXbVEdZ2j9A9HzR2ccjgGFILozTcFWf/ol+GT2
-----END RSA PRIVATE KEY-----
`)

func routerKeyBytes() ([]byte, error) {
	return _routerKey, nil
}

func routerKey() (*asset, error) {
	bytes, err := routerKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "router.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1518726943, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"agent.crt":          agentCrt,
	"agent.csr":          agentCsr,
	"agent.key":          agentKey,
	"loggregator-ca.crl": loggregatorCaCrl,
	"loggregator-ca.crt": loggregatorCaCrt,
	"loggregator-ca.key": loggregatorCaKey,
	"router.crt":         routerCrt,
	"router.csr":         routerCsr,
	"router.key":         routerKey,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"agent.crt":          {agentCrt, map[string]*bintree{}},
	"agent.csr":          {agentCsr, map[string]*bintree{}},
	"agent.key":          {agentKey, map[string]*bintree{}},
	"loggregator-ca.crl": {loggregatorCaCrl, map[string]*bintree{}},
	"loggregator-ca.crt": {loggregatorCaCrt, map[string]*bintree{}},
	"loggregator-ca.key": {loggregatorCaKey, map[string]*bintree{}},
	"router.crt":         {routerCrt, map[string]*bintree{}},
	"router.csr":         {routerCsr, map[string]*bintree{}},
	"router.key":         {routerKey, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
