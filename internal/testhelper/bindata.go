// Code generated by go-bindata.
// sources:
// test-certs/loggregator-ca.crl
// test-certs/loggregator-ca.crt
// test-certs/loggregator-ca.key
// test-certs/metron.crt
// test-certs/metron.csr
// test-certs/metron.key
// test-certs/prom-scraper.crt
// test-certs/prom-scraper.csr
// test-certs/prom-scraper.key
// test-certs/router.crt
// test-certs/router.csr
// test-certs/router.key
// DO NOT EDIT!

package testhelper

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)
type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _loggregatorCaCrl = []byte(`-----BEGIN X509 CRL-----
MIIChzBxAgEBMA0GCSqGSIb3DQEBCwUAMBgxFjAUBgNVBAMTDWxvZ2dyZWdhdG9y
Q0EXDTE4MDcwMzIyMTg1N1oXDTQzMDcwMzIyMTg1NVowAKAjMCEwHwYDVR0jBBgw
FoAUJHSz2Xig7i0GAbAMIMraab0fKawwDQYJKoZIhvcNAQELBQADggIBAHB63qtb
mR6tH7hElKxCRgBrmXbMgQTSTfwQa9000IsRoVmgy6UprBhYRZhZlCEIzY0jJROb
2VMug1bTpOeMrzU53Ki3CQ84eYsrTbNu16hStaaMTrgCgJGr9aYQtF1bsnNn8XRo
82xiTPDGeQdoecIAXZ1rtMjO8oXlSeFWi/aNrBLMb7+fBSUx+3I/0Bw26HBMbJs/
PEUTEsU22cFn8umLEKTX6pezxr2V0OTEm9heoykH8FDSHOoM9JPY+zt+XZmmd2eO
NAexuaHkgRETKAKMTxLJI9Sj5borsQy7YJEQpPxpjFXfehCijPWgOb+xhtN/6OCi
4xPVc43Su/GcYVkRXUFz0rgy42HL53tcB3Vr+kshjwfr7J5Cy/I5R7fHdfeaSXQX
9F+mZnPqks2099UEyICBqI1TLe6hi6yu42GLolj4yKZbNMCaoN8mTR2Z3JvdBuNH
x7Cg7NRbnI6yw/G0roHZBsZwzzfgZSUKBhLsbIjdtV3zPgO1dJsYN7YOZFbC5DiC
wJSVIxBjsesQbrOqqcm+FrVzoR+vGeTOBBOozZHsiEYeOrkyD172s1Lvxzrp8KCi
Izuwrkqyp3eGCT9VR4icecqBvtwON39MweME2+DPzBhjqwY+aYq3q2BJI/8yocBb
0IboKNccvyblgOCGziQf2JDm7YxepcyzP55C
-----END X509 CRL-----
`)

func loggregatorCaCrlBytes() ([]byte, error) {
	return _loggregatorCaCrl, nil
}

func loggregatorCaCrl() (*asset, error) {
	bytes, err := loggregatorCaCrlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.crl", size: 930, mode: os.FileMode(292), modTime: time.Unix(1530656337, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIE8DCCAtigAwIBAgIBATANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDEw1sb2dn
cmVnYXRvckNBMB4XDTE4MDcwMzIyMTg1NVoXDTQzMDcwMzIyMTg1NVowGDEWMBQG
A1UEAxMNbG9nZ3JlZ2F0b3JDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC
ggIBAM6x/XIjc63rQbUdKaSOJVBPQJNIuvULz3CdWe40t54D7XiOrRCm+c8EyZZO
D5jjRWmehckr7TCTMb3OTeE+LDaxq4lpycSsxFtmv0sr4gGJgDMl79tNILFYLtzm
lE1+n4KhLNFb5ZrzabrPQMOnK45mpPXZNDCzhzsDuYg/NjkitJPHSm0LHVBM16qa
lNF1FqSWJhIxAZZQdGnEuZ4Si9/TnKNR5a6Oa1mVLJxHuhbqcaAkrMZxn3JFIsbN
AADdJARL6dsqX7bnEMWZ+yHSCTXTEkbKmqM9JfRejTCc2o9q29PDoZ8706KDtcQb
2rMB4frGStEKH77S4CWpYqviJTJC78vrqQ67r6Smau5ssaty4/Q0MKphzuhRecFA
oHJyScGNEcbcoChWCSF/ELMia7L+3ACyM10T6b8dnx++j53ULUHL3y597bkwnSbP
F50Nz+BgX7E93ppxXxWRh7ACDdD7G+mKxx0nwUpEufGehYrZpFI1j247spv5Ac9E
0X2q/TpQpZBTThTh8CMx8WUIxzCKtvySPftXdxXCsptr0k7UOrqy77ZJYlUzpaLh
s9QtjaM2jY6o1LHAuwxaEk7CtE90M5qC6X9ej6JUxMhMWMIEXpXHlKPdi0Tmbrqx
SG9qrtZgIPZt2H7EZTg9/Dwuv1H513Yd3+MrGosRPyyIH2+xAgMBAAGjRTBDMA4G
A1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBQkdLPZ
eKDuLQYBsAwgytppvR8prDANBgkqhkiG9w0BAQsFAAOCAgEAN2c0JZph0ZCD8Z7p
DYQ9dS+Es8INbNgLgSH/zXDAJaPCiIwiEESGVyiSU86WDcmg23cPjemnxGQUt8IB
Wq7aRN0ua7yT907M45ch2qkOcCqzW/+egBYMrqEY4q6CANGiUe0kZ1421RQsf02J
dZX5c03kcvkDtmm1V0T9Nv4WA1IaoijCWDAW8nux95QLIGXkE0SCjtiPy2gh0Nxd
lpu65aJN6/nqXCSp6V7/g/ZTZ/ltYM7SbaOLibd5rehzp0d9M45r/O1F0DPPjvWl
1QFpA6JaRgohtIdwPq0zyn4YesADQ/RUtjVn40eQLBFdwB3l6jLHqUSuZJMQ2qdF
VpjEdLlIO3MnOotH7sZjNHoOKHejpg+xHZTTbyIwp7Bdsm+D1Qm9EtbOpsgvMfBD
rUf1rvO+J0/ffwiSCi0Zen65/zmCqUDzDb3KYJ88sgCOabMBx8s3P/FgY+aT2tU1
Empv9YVldOToNjVGjAjkX3wcNZpn3C2dEnAHMMwWE+A8xShlBNofm1VeFeBb3BMG
Db4kuayDNB67QCIUmeEvdgGcvX0jfwb9YxxbLhiFhzvO781eLyPg4rFxVzqN1qTv
JN7CHFvrqAc/Hh8sXUMWOHjx4U3jMCzpH/hpZAAfa0ZTHXyVASIfW0x24ZQQLtug
9cRgcQz0BnHg7Wj3i1hKac4HB/g=
-----END CERTIFICATE-----
`)

func loggregatorCaCrtBytes() ([]byte, error) {
	return _loggregatorCaCrt, nil
}

func loggregatorCaCrt() (*asset, error) {
	bytes, err := loggregatorCaCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.crt", size: 1773, mode: os.FileMode(292), modTime: time.Unix(1530656337, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----
`)

func loggregatorCaKeyBytes() ([]byte, error) {
	return _loggregatorCaKey, nil
}

func loggregatorCaKey() (*asset, error) {
	bytes, err := loggregatorCaKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.key", size: 3247, mode: os.FileMode(288), modTime: time.Unix(1530656337, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEJDCCAgygAwIBAgIQe1sNfppR1tP0S884d8jlCjANBgkqhkiG9w0BAQsFADAY
MRYwFAYDVQQDEw1sb2dncmVnYXRvckNBMB4XDTE4MDcwMzIyMTg1OFoXDTQzMDcw
MzIyMTg1NFowETEPMA0GA1UEAxMGbWV0cm9uMIIBIjANBgkqhkiG9w0BAQEFAAOC
AQ8AMIIBCgKCAQEAoHH8v+KyYGeDDFs0LkxoipusG86cRUQgVLTH/kCFS+/6wgsR
Ca9JgGiiU3Ji+UzHxBTRk9alV0bZhyKQLyUGkyolUgrnTP0RaITql4VTCU0UB4MU
99OwmK4a4VfXp90V2gs5ETQqH/fUxuPlxO3WSfah+NEbfIiWDB93Zh98qxdh6+X2
dazTLrJJrNpPnvm98wwlFKX8mdAHBl/lNcb7tAfy03T9AW2yi9h/dlDbPPKcPbKu
aWiL5oQDmsOEG67ahquoGH+yFpmm4MI4+Tt+njNVp7+hQUMpqEYOSCzrT/J9Nkp9
eD5wH9j1p54vPfQD3esH3i7p2cCJUXXRurg8OwIDAQABo3EwbzAOBgNVHQ8BAf8E
BAMCA7gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMB0GA1UdDgQWBBR8
M9WEnJjmJ20XLEic1D5TPrgH4TAfBgNVHSMEGDAWgBQkdLPZeKDuLQYBsAwgytpp
vR8prDANBgkqhkiG9w0BAQsFAAOCAgEAdV6Njf2DTIswoKF9LAF1YOK/ED5C45+B
ZVWsDVMV6YNbnSidUGoD38qAJKoeuZrx0a/uS5VMMCq0DMw9wRqi2i8TnGL5fcpo
vHQAS6NWt6XOlY/sp96CqKsw6FKnPbQF/6zsgDp3P9ilt9Ai64/PW19WFN4bEwZc
Wrjs5x+2/YXqZyJH+v0PZy1iMSiqeLKClfy9Xsb85OtZFnHpOynG19ZYzv2bgaM5
RARRuxyWgW6108Eig+Dz3fleWajvTH68okMN0UYjXdcH7WFvQI3jNo03qiby3ggj
bCU5XixC09tD8wvyKm2gtXUeDwJxuOQU3ym2GvjF4ZfzzfELlBlOZb4fh18J/PJi
E5Qq58gTjnDNURb15+hlbp566wneBfd3HKJts6AFPy2dn5fDIkQCFle/tGjZCRqz
TsWAW2gU0GbxZpZQ3/QYkg9KCI3VpB4CkXAp/vvEWzer4f6vRobv++vI9YS7UNAa
fI61W4wj/F7Gd3d1AewQdc4Zdv0oXw5WxLl3Jb8eojH0Y9xC3zjhxCja7tUWFsH8
NPUJNmEZuUbf+dCo/zzIf0l+z8ONdaQxzD85ZDtuxxFzMy2if4yjGHjUzsr5GOJN
19rPaYV7oD9zBoWyTjlQ3Bs1gbbyCKtP+FoTLcibNpltCcA+S2OomIOuaiEEbF2/
njQ4+lGWF7w=
-----END CERTIFICATE-----
`)

func metronCrtBytes() ([]byte, error) {
	return _metronCrt, nil
}

func metronCrt() (*asset, error) {
	bytes, err := metronCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.crt", size: 1497, mode: os.FileMode(292), modTime: time.Unix(1530656338, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICVjCCAT4CAQAwETEPMA0GA1UEAxMGbWV0cm9uMIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEAoHH8v+KyYGeDDFs0LkxoipusG86cRUQgVLTH/kCFS+/6
wgsRCa9JgGiiU3Ji+UzHxBTRk9alV0bZhyKQLyUGkyolUgrnTP0RaITql4VTCU0U
B4MU99OwmK4a4VfXp90V2gs5ETQqH/fUxuPlxO3WSfah+NEbfIiWDB93Zh98qxdh
6+X2dazTLrJJrNpPnvm98wwlFKX8mdAHBl/lNcb7tAfy03T9AW2yi9h/dlDbPPKc
PbKuaWiL5oQDmsOEG67ahquoGH+yFpmm4MI4+Tt+njNVp7+hQUMpqEYOSCzrT/J9
Nkp9eD5wH9j1p54vPfQD3esH3i7p2cCJUXXRurg8OwIDAQABoAAwDQYJKoZIhvcN
AQELBQADggEBAFSLy1dIp3/7N+ujy8Rbzi0aEYUCpZFDy/7LFf7aU5oJtFuaR8Kt
rOrODa93bxxTeaAvWDzbI/L8lDY76Y6PUctL91g4Iv8Uj+ARBFvU+J9ReJmkiN7L
xSLSJnj48nNb8M5G8cp2cArmmEOSBYsm7y06EuMNk6SnnQiPO3gcUxj78EQ18UWA
ffMbLgmIoZGSQgKAI67FLvrRRHzqnuZaRXEAebj3h3v7Ch6kirH/sn5+oMEUT4ow
UtfgUJOnzlxJtynC6IQabNhPKGi8FAA4IQHJBJiGMeuyhZH9KlG9VWdlgNWT7+8y
Xzri9kskQ3qZBK/m7TOWLPkcAMccM8MZ8xg=
-----END CERTIFICATE REQUEST-----
`)

func metronCsrBytes() ([]byte, error) {
	return _metronCsr, nil
}

func metronCsr() (*asset, error) {
	bytes, err := metronCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.csr", size: 887, mode: os.FileMode(292), modTime: time.Unix(1530656338, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metronKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAoHH8v+KyYGeDDFs0LkxoipusG86cRUQgVLTH/kCFS+/6wgsR
Ca9JgGiiU3Ji+UzHxBTRk9alV0bZhyKQLyUGkyolUgrnTP0RaITql4VTCU0UB4MU
99OwmK4a4VfXp90V2gs5ETQqH/fUxuPlxO3WSfah+NEbfIiWDB93Zh98qxdh6+X2
dazTLrJJrNpPnvm98wwlFKX8mdAHBl/lNcb7tAfy03T9AW2yi9h/dlDbPPKcPbKu
aWiL5oQDmsOEG67ahquoGH+yFpmm4MI4+Tt+njNVp7+hQUMpqEYOSCzrT/J9Nkp9
eD5wH9j1p54vPfQD3esH3i7p2cCJUXXRurg8OwIDAQABAoIBABZA+S+cP+WDNfgG
xmwNiQqAoRSSSbaJxno5QOwRAuwPcxZq9ogDWgyHdsxgNz4g2ixmPtNkmDZMy2sk
7h674feThu2kOYTCLSH0HZ26jlPh7v9DvSrKn9ntfCj5SB4uWhOOLvIl7BnXBBo6
DeqMmoZTwQ+D4W4ae8Ver+7oOyB3u4keI1gDlwMZD+OpKfSGFIp6AZ3Cqr6w95Wr
Fz+sC+Ipsq8yysZryF2TUCaLzHldcVdGuwhWRnMHx2WLlsilnkwhxL7poFYz4c+i
iX6MTptNfJX5OKRapExA0gVCjlabpQkd6YbbqglnpK9K9znPh73imWDOcHi/54Cw
LNWguaECgYEAw2cDWNvqedm2pzxfQLyiqOiq43ILx3qPu/CUMyAo86XQf2PDgvNV
DlFTRAK4TU8yCvO8sfAYQv+RR9j1jVNlFoJLyx8d+1T3Uqe8ttBbuDxr4xGYmbii
BQ58KlDJqVhyUiHmK9q0z3TIqcjIBdPSs40WqfgvKYj0UKM6lGJL7GkCgYEA0jO6
qvINLUQVSo0QgDhZMUzik9IiG2Y6w/+VmOKplzq5w7s9nZ5jBojvTRXfGgi8CqaA
e3VHFOB23IBTjyL2CglxIWP+4jAx9X8jGppDYehzeB8kTvdxMQYD14QhFhzYU/Nb
vTtigy4HnqSMpGhrSCo8pXLf5Clb9RK5tEEd3wMCgYA6GUD3hLvc6wzSALNZrjy2
+CcHZXt3HkvqV4fZA7DpcN3jYqhZITyi+y9Ew4JFCk0Y0IvEZFzyXsa1lB6+nJMr
9CXRCTmC5yp6WwFTYfRDfUOeyjaTTkBuPHZSpp6vSWsEXKvxUh/8pv6a7OX8RZUa
adLZSr/LG7t41m+ueuOUMQKBgBuoQMRjSsaM8bw4aVZlk56//gPzHxe50LufMmDG
WggS6wRM66OEhoUCmXHsEcnMImnIVJlp6eteSWVj4RqxP+w8J8176bp7GuexTb4f
VARa4G6Ksm1Nc3A+2VyO/wd4ziHloEl6udCGyuvdvL+ZGZyKKiaewcS0iGvrhdGo
y7RfAoGBALtiLjtLi5tC3RNFlx/CXzyfePFkqWCQiDrbMeV78pFujnwQzm839vF7
dC7mX6LGCqlDMVINJjEbtmjr/SddFfRFKkXUDokCoO47UaScQIF5rr9t04+gL4zJ
uju9Mav4xt0anCOIP3ixzfIDwzTtKOzyO6VMbdN8V3OlYUXgGHU+
-----END RSA PRIVATE KEY-----
`)

func metronKeyBytes() ([]byte, error) {
	return _metronKey, nil
}

func metronKey() (*asset, error) {
	bytes, err := metronKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metron.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1530656338, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _promScraperCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEKjCCAhKgAwIBAgIQZBrvlZIaQwb8OptY4MPUmDANBgkqhkiG9w0BAQsFADAY
MRYwFAYDVQQDEw1sb2dncmVnYXRvckNBMB4XDTE4MDcwMzIyMTg1OVoXDTQzMDcw
MzIyMTg1NFowFzEVMBMGA1UEAxMMcHJvbS1zY3JhcGVyMIIBIjANBgkqhkiG9w0B
AQEFAAOCAQ8AMIIBCgKCAQEAnCXTDQP5SQkKB2Zsw6EKLcGy4vxSwfPwqJ2UjTxh
jdraqQH3L7Pdmg+u8nFecysRCLIgXsaA7z6p0mq7HXqt7qf2DN6HAsdnw9/tGAsz
xKZUzKhTDoRBXooi8MxKGYFcn+97xKeMiYW/JqWeKWP7b5xfVbPyL+r2mHJ28YMh
aPrOLCng1rkBZnS7NEIn14w8sCa//UY0bcoxL3WU4vJFpdc6lgppB3DThmA5En3n
vBq/lLuAOPMzPYKIHbndqhgR/S7r8U4yQvx7g0przRbcXu7umIe58zojjfyVilyN
vSjKBF94CiYSnuUP9+ZkSl1blzKkHXvXP2LZWffUFge1qQIDAQABo3EwbzAOBgNV
HQ8BAf8EBAMCA7gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMB0GA1Ud
DgQWBBRJG441h2hzOX3tssNaMMMGiouK0zAfBgNVHSMEGDAWgBQkdLPZeKDuLQYB
sAwgytppvR8prDANBgkqhkiG9w0BAQsFAAOCAgEAEeSP4OKYMJCZbgWonvVh6edF
p+2yxK2IbRZRCmHbxeuYVznAPhUMHxRX/gijsvYbjgN6bhdNrwTxJgHpCPjuytFs
dg0oWRORMbiufYov7I7Zzt+jhjwCf974a9gT3cxY5hcx4gXRZRxe0eQcF4dTudr3
Ef4U5N5/p/aEEl5T3EOhe/boohqTkaCIDJc5Y2WPXXFZulnrozNKxFtuIl96nusH
E/jBNKzKOYA2Xz/UOx7JKsAgcQVdQlSyVoD3k2o1hJFIwylDgaih+RxyC+d4Ivrx
1kgCdzTIbp4xYA9YIJ/X4xpqVeQ4PA3cACFqlS31ItAKORcd6Rf2p7sizkUQWhr6
v0qNwuDxc8A8aV518lOBDlF+QH4zRAYyQy+GkMYO6NRWIq7ynsXb2+AU8Vg3L/HZ
IfvBGLjpIHj4LBSHA6iq3UpWT5c3YU/JOGMi5fWsNUcOfZR/AF2iuft4UwTzcYHF
GICM4Y4g1Ig/TDwlYpD3VNIXux+mkr0qSGnq3dPdNKKMYbp8cgCdADu+JvNMq0/m
h36gBvn/99OBBG8gt8iYDcMdFekRU1HgD0NA4EFT3kORSJcQ9XhngYDcMaorH/PZ
D5vzH5JV2dt2h8/G0+KjdVs8D1+cLOmls8s/5DXKKkSh9Yu09QxEiTkUeHIC/MGh
P8LMEUi0BAkgSGu34j4=
-----END CERTIFICATE-----
`)

func promScraperCrtBytes() ([]byte, error) {
	return _promScraperCrt, nil
}

func promScraperCrt() (*asset, error) {
	bytes, err := promScraperCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "prom-scraper.crt", size: 1505, mode: os.FileMode(292), modTime: time.Unix(1530656339, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _promScraperCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICXDCCAUQCAQAwFzEVMBMGA1UEAxMMcHJvbS1zY3JhcGVyMIIBIjANBgkqhkiG
9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnCXTDQP5SQkKB2Zsw6EKLcGy4vxSwfPwqJ2U
jTxhjdraqQH3L7Pdmg+u8nFecysRCLIgXsaA7z6p0mq7HXqt7qf2DN6HAsdnw9/t
GAszxKZUzKhTDoRBXooi8MxKGYFcn+97xKeMiYW/JqWeKWP7b5xfVbPyL+r2mHJ2
8YMhaPrOLCng1rkBZnS7NEIn14w8sCa//UY0bcoxL3WU4vJFpdc6lgppB3DThmA5
En3nvBq/lLuAOPMzPYKIHbndqhgR/S7r8U4yQvx7g0przRbcXu7umIe58zojjfyV
ilyNvSjKBF94CiYSnuUP9+ZkSl1blzKkHXvXP2LZWffUFge1qQIDAQABoAAwDQYJ
KoZIhvcNAQELBQADggEBAHKEC6gM/29z8AXh/uYp+oJafhUZsk35i07zM6+J5FnN
z4ab2MgkyyJ8WGnhaYliWLTXiFGLkPhkSa63iurOci+tw450WYt1ET3y3xa7AbeZ
dXLvSJd7cHTcrN6CaaYHLEiEKCAD7cuiERVwywiZtjgytOSLj8b8S5iNzH3yclxt
LqLZw1PPFNjcSK8SbYEM1duX3weVLgOHehgJvLadmA/RlJ8WiDGJ0VKHA7wZVk5H
hgeQTI2V+iulpFSwW5IYsSIy2g0LxUI6Sy7TBwP547nf7UkNGEqzs1G92nFuM7qu
4VnrwY7IuHN4nuXpEXTTvW7B9ii8k8vLJikYSOe72Pg=
-----END CERTIFICATE REQUEST-----
`)

func promScraperCsrBytes() ([]byte, error) {
	return _promScraperCsr, nil
}

func promScraperCsr() (*asset, error) {
	bytes, err := promScraperCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "prom-scraper.csr", size: 895, mode: os.FileMode(292), modTime: time.Unix(1530656339, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _promScraperKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAnCXTDQP5SQkKB2Zsw6EKLcGy4vxSwfPwqJ2UjTxhjdraqQH3
L7Pdmg+u8nFecysRCLIgXsaA7z6p0mq7HXqt7qf2DN6HAsdnw9/tGAszxKZUzKhT
DoRBXooi8MxKGYFcn+97xKeMiYW/JqWeKWP7b5xfVbPyL+r2mHJ28YMhaPrOLCng
1rkBZnS7NEIn14w8sCa//UY0bcoxL3WU4vJFpdc6lgppB3DThmA5En3nvBq/lLuA
OPMzPYKIHbndqhgR/S7r8U4yQvx7g0przRbcXu7umIe58zojjfyVilyNvSjKBF94
CiYSnuUP9+ZkSl1blzKkHXvXP2LZWffUFge1qQIDAQABAoIBAHuMlhyTS1iVlWDb
ky2LK3Ge9LsTKSwbpwzTemnyH8JNK3xUeNA+whWXWTatqyz3I4g84M38xKIIc/hw
yNL/ccYHEfGG1U7GlnzunjvLCVAMx8YTXXx7+vkh1ZmwGuVpbO+DXuvwIovhzqh2
nNllKdpa4Tf/pJ5zjGB9GU3pErNrmtvTgbPXXjj3DarksI2/bYeitjZ2rz6mKDiA
/Wj+CQo0zzH1/yat1VLAIHzgqi0j4jEtywZ1aMV9rA0qI8Oat5HftODQ8C3pkJE0
aVzLg44eM8ih/QWroFvr5RGy0tJQHWGGWf8cwGaI0NPac/MybPC1AYSISuYVlPJT
1nDm/j0CgYEAzTp7AwQyDU/ZFxqaG+/Sy/1fm8q3gIuSrUjtoy+jU4WG88c58Y+v
5TRhfef7TQiaq2QRz5cg9ynxQ6ugOrcCXS883R3WOCHHplZWJpgv1t5OXFGzOMXy
hIs5qzt3stGOhrEl+Nl9i0XoGVg302Aw2BbulT0WvrXjgAc9XIZ1h8sCgYEAwsb3
u0/nIz5PByiCdw1gtX91TdlI9hmSWpIoyrbZ0GlM9QFpPJo7jV9kM6ocrEwLJKYz
BGJpB4d3r9j32+b46y5OcTmBFee2khH6uFFoivO7HgZTkNpgiYhmhbUK73Y8AV7j
AXYRDxMnyehPtKJwj/xUOGC/sxkRf8MJpnPGQdsCgYAQ7pU9j3gNrxvLEy/JxESQ
/euIb/YpzdohH9YzU3fXKToUHMjEDEXH1EWC3MPX/DC+mTf6944JtlUobx1+GqFA
TOhpmc+Vu/u71n2vG3k+8gJnDXqK4ZH7q3zrirF6eF2Y8T6fxFneRrs6dBPPBa2h
9mpit7KLs3f8lRxT6OgDdwKBgFeLNi1qbGjayIpfGsSHrr/k2cRztOdn9u/eYZc7
OAsESSKVz8b9S2bvSQovm1OVmiyOxr9hu/M2YAUZb83WsmqCFZ+uSOafjt94VUgi
zuolQiTskwK4JEuskuflx1R5v96d10oA1wn/ghKt56U4nX8Z2oC8e2z0B3l1IBFA
WAuhAoGAJ7dllx8EOl2vHWhiPj+8Vrd3DpKHSqZsCGthygYeB0tOZznbnUVu4ezh
FajB1YFkYG3Om2ljOA8AedHG6NKd8WltlKTMBi1U6w6k796AM9BnebfB19zpgMyA
CNKyVJtFdtneqcRmaxuE1+Um7nTxP893kBAc+vI8Trwx+QHmbgE=
-----END RSA PRIVATE KEY-----
`)

func promScraperKeyBytes() ([]byte, error) {
	return _promScraperKey, nil
}

func promScraperKey() (*asset, error) {
	bytes, err := promScraperKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "prom-scraper.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1530656339, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _routerCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEJDCCAgygAwIBAgIQDbJjqKriYc8rXnA08EhuYjANBgkqhkiG9w0BAQsFADAY
MRYwFAYDVQQDEw1sb2dncmVnYXRvckNBMB4XDTE4MDcwMzIyMTg1OFoXDTQzMDcw
MzIyMTg1NFowETEPMA0GA1UEAxMGcm91dGVyMIIBIjANBgkqhkiG9w0BAQEFAAOC
AQ8AMIIBCgKCAQEAo/WZXdvLSfC46FpOFm7A8Q3rYrCw7GnmvezzHffKwL5fKclD
E99CdRb9rKrCCQf5Iw4hIBBYXNPzuSvA8s0+GqwhbfhaTr96WBdl5pLGWDGmmwGN
xMxcKrIUqhPOtrnnhbKxik+BsgwVsgvREh4k2SELooyiGX3Nr5kIzuAaLAeqIhq9
W8KKdCArBQrkeebmYHUXPcdniT8zNAGfBUcdzPJsP/vbksyW6UCF+keNLvFG00QG
fWrmtx9Sxe+HfRkXD3KzyNs7flOhf/tsKPRrJssECMlQHf8diPFPfQKqb/AjuEZL
DoaGjkQsZ90lAT6ccnEJzBihQT4t5SCCpvYa7wIDAQABo3EwbzAOBgNVHQ8BAf8E
BAMCA7gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMB0GA1UdDgQWBBRa
m4L2MYsRdoVx0MyU8ebqM0UYCDAfBgNVHSMEGDAWgBQkdLPZeKDuLQYBsAwgytpp
vR8prDANBgkqhkiG9w0BAQsFAAOCAgEAIPhANmTRMVaqdjOIUNcaxiD8c/lgBCtJ
sVx2OglrHWjGaYfed9UCdAHUP8uPkeOQj/9oZycGd9dqODlY1EP6V5D6tDDgNYkV
zf83e0XZQig4wpeP+PBvrR/colmfTaw1KkOEtulFtQEmm3KGN/eYX9sFAQ3rSyhE
NvsofKgmmjA8OzdAA/qLzVuwIC7HNJwc586ixqMc0l/5nmkfRfSaes2NOTiNBmc2
7y6AXrpSMuTemPmnVWN+OVd+4rVuZa7b4kXTMcIzpTquKtbZTmdBkzaboAL6PsAQ
LubO91qL94vwZwog1ANoTSvo2zXUi+tvLpFYDLK3o9/msHpkQWAj9B2tQLDTVnj6
cvJyqHBFGZQfJpbkHkFr/zFP27HHb2QMq/D3digXNT3moCKf2w0cZ3exlXyuQXNr
p/td7IIYSHCa4VLR2OukDPDHoXCQfDVmX9+3ddr1ysL4UzaRMfkUFERFs/VKIsSc
dMK26HoCVix5SdJ0Oy/J7fWW0dA0jxu7j05MO57fdDhy7r6YFTe00Sg60tUVIFlG
s8ugKUVfcPrkWUOPaM2/l80lm1ZWhwrF8p5Lf+p2Kd19VLNXDmfsLEbEsPVydtzw
Lu6TwrrzCnJvGNccplRU2tZNAnbOdEmGVGHl7iCNq3LpSZC+nvmHge4LnChBLAre
cQEYI1qRyH4=
-----END CERTIFICATE-----
`)

func routerCrtBytes() ([]byte, error) {
	return _routerCrt, nil
}

func routerCrt() (*asset, error) {
	bytes, err := routerCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "router.crt", size: 1497, mode: os.FileMode(292), modTime: time.Unix(1530656338, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _routerCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICVjCCAT4CAQAwETEPMA0GA1UEAxMGcm91dGVyMIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEAo/WZXdvLSfC46FpOFm7A8Q3rYrCw7GnmvezzHffKwL5f
KclDE99CdRb9rKrCCQf5Iw4hIBBYXNPzuSvA8s0+GqwhbfhaTr96WBdl5pLGWDGm
mwGNxMxcKrIUqhPOtrnnhbKxik+BsgwVsgvREh4k2SELooyiGX3Nr5kIzuAaLAeq
Ihq9W8KKdCArBQrkeebmYHUXPcdniT8zNAGfBUcdzPJsP/vbksyW6UCF+keNLvFG
00QGfWrmtx9Sxe+HfRkXD3KzyNs7flOhf/tsKPRrJssECMlQHf8diPFPfQKqb/Aj
uEZLDoaGjkQsZ90lAT6ccnEJzBihQT4t5SCCpvYa7wIDAQABoAAwDQYJKoZIhvcN
AQELBQADggEBAD/MqhcpOBPyfwzurbniIaS3bAipr0Ieh7uL/07WB2EDWqm9hxUI
yBacpjX7/yI3fvXq/aZfrkGwYpAj3S5uMWt8/j6dhFsa8QgbHjerk8+UjjlO6LAo
SolI+0vC8h56IRUYD9yyNCo3MN1E6PybT4dNBu1kLItdfwbFWUsL/iwMqobNLwk1
xotSWl0xss9cKSW9wkooR7FS0UCRhpM6gPOAxuiXPrjlE2aMsOO7cSoIXKPvrLBy
5I6en1SQUNoTIaZPWbxXTqX0nAah0yv3PM6GiLdrfBcjOvnz9vexw4m0mOv5StN9
063GJUwDiVywaaIDc+DdlVUydc7O8e3PHWg=
-----END CERTIFICATE REQUEST-----
`)

func routerCsrBytes() ([]byte, error) {
	return _routerCsr, nil
}

func routerCsr() (*asset, error) {
	bytes, err := routerCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "router.csr", size: 887, mode: os.FileMode(292), modTime: time.Unix(1530656338, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _routerKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAo/WZXdvLSfC46FpOFm7A8Q3rYrCw7GnmvezzHffKwL5fKclD
E99CdRb9rKrCCQf5Iw4hIBBYXNPzuSvA8s0+GqwhbfhaTr96WBdl5pLGWDGmmwGN
xMxcKrIUqhPOtrnnhbKxik+BsgwVsgvREh4k2SELooyiGX3Nr5kIzuAaLAeqIhq9
W8KKdCArBQrkeebmYHUXPcdniT8zNAGfBUcdzPJsP/vbksyW6UCF+keNLvFG00QG
fWrmtx9Sxe+HfRkXD3KzyNs7flOhf/tsKPRrJssECMlQHf8diPFPfQKqb/AjuEZL
DoaGjkQsZ90lAT6ccnEJzBihQT4t5SCCpvYa7wIDAQABAoIBAAp+ExyAjlfjAdJM
xSaGW+6RN3kPWaMne863tS87xkvjYu+no5VH+lbH69/65YPycK0foFsO8LiwD67P
7/8Zx1mpnlINTKoxcsDkbm79AZhvRPwyc0Ie2d8Zmlzv+5CSARD7SIVTZTdhspm8
S9re9vi2NqpmWZFMDbepEXk7ujELCklBabMWUTqVKHr2wTf+pNahqQz4pQv9Jl1D
FdBKfNcLg40vIuqqvDa4GQTJ566N+Djly8HAmEloqMbuZYMN8JFiuCweb6Jxhn+C
u84EEu1Bp4iEk547BX0cJxSclrCyyqjzF5JQmfkuG0eNXnjFDLREy6FXm6LQ9luE
2CgtBHECgYEA1C4cM5ka17UXPBgWH9ad8Nmkow2Qv+A1mZ80BialKjkeqf3DSSCp
K5+dCH/xjr8wkyoMAFWc0otbNnfEUF/Pko71J3LhWP1O8RDHuZHP3sEeVlB2fdHB
sVRmRjhfMlHLl6983jMihcdJeg6e3n05VR+PDvr+FjyumapgmhkAmy0CgYEAxdIT
HHgQTP/V1t5acuvO837ZQ1FwB/EsnXZwYpUfYTuqF+pncb2awj3HJzxiqVG+FzmD
6tZbUm5dEH0Y/5oV5rHamXgfAwuhIyAkPD/8U6vVpiP9mheVs/rSUZ1JyJyGvOG8
kznejYxBG7lHrJC+/j1tZntzW2GMdJTkjUyTMAsCgYBKAD7zu/1BqDYPTnNA7XAu
VSn3eD64vPDUwFK7pnTKUhugvBGFCrAVt9hj44OS/plpaiu/XhyQzeulBoZgZdoW
Sme0N3vito32w5x02yb9kKsM/Ykl/qcoOsBk0zpYaXCxWZIaSQlMUSIOQNUl0dTS
HGyfk+hURxu6GlMQy5GLjQKBgQCUH+5hheGm1naXst2Fad8H4vbqemNp/wQKUDJt
Dv51P0jpKYMV3wSv57RlQ8kYwfWVzGJkCOhOvAcBnrqGQimeGZT3D8Qg8qdQ9vNL
DhpxyJxtEEwIAxr8rpanuCAUkGgvrNQYZd+om9nw2Xa615O8KeDuOQgy58NVVFwj
FbCs6wKBgGN+5d+qu6zFtIFb09gFRV4B/6iEY2NdfEllMjynSL/os7x2mInK4Iir
uWwN00gIxxTMlDQLp8iIHh3QJVAfX7j8rBj+NbvHZnY2+JasiT8xMNK4p0F1TgST
tziXJN+0DbJrUuk4pfNbyXJfb6RaqrsvDmxah+xKWc+OKOJWvu5W
-----END RSA PRIVATE KEY-----
`)

func routerKeyBytes() ([]byte, error) {
	return _routerKey, nil
}

func routerKey() (*asset, error) {
	bytes, err := routerKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "router.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1530656338, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"loggregator-ca.crl": loggregatorCaCrl,
	"loggregator-ca.crt": loggregatorCaCrt,
	"loggregator-ca.key": loggregatorCaKey,
	"metron.crt": metronCrt,
	"metron.csr": metronCsr,
	"metron.key": metronKey,
	"prom-scraper.crt": promScraperCrt,
	"prom-scraper.csr": promScraperCsr,
	"prom-scraper.key": promScraperKey,
	"router.crt": routerCrt,
	"router.csr": routerCsr,
	"router.key": routerKey,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"loggregator-ca.crl": &bintree{loggregatorCaCrl, map[string]*bintree{}},
	"loggregator-ca.crt": &bintree{loggregatorCaCrt, map[string]*bintree{}},
	"loggregator-ca.key": &bintree{loggregatorCaKey, map[string]*bintree{}},
	"metron.crt": &bintree{metronCrt, map[string]*bintree{}},
	"metron.csr": &bintree{metronCsr, map[string]*bintree{}},
	"metron.key": &bintree{metronKey, map[string]*bintree{}},
	"prom-scraper.crt": &bintree{promScraperCrt, map[string]*bintree{}},
	"prom-scraper.csr": &bintree{promScraperCsr, map[string]*bintree{}},
	"prom-scraper.key": &bintree{promScraperKey, map[string]*bintree{}},
	"router.crt": &bintree{routerCrt, map[string]*bintree{}},
	"router.csr": &bintree{routerCsr, map[string]*bintree{}},
	"router.key": &bintree{routerKey, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

